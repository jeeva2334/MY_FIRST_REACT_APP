//**USE STATE**//

const Home = () => {
    // let name = 'sanjay';
    const [name,setName] = useState('Sanjay');
    const [age,setAge] = useState(20)

    const HandleClick = () =>{
        setName('jeeva')
        setAge(19)
        console.log(name);
    }
    // const HandleClickAgain = (name)=>{
    //     console.log(`hello${name}`)
    // }
    return ( 
        <div className="home">
            <h2>Home page</h2>
            <p>{name} is {age} years old
            </p>
            <button onClick={HandleClick}>Click Me</button><br /><br />
            {/* <button onClick={()=>{
                HandleClickAgain('sanjay');
            }}>Click me Again</button> */}
        </div>
     );
}
//**FILTER**//
          <Bloglist blogs={blogs.filter((blog)=> blog.author === "jeeva")} title="Jeeva's Blog"/>

//**PROPS METHOD 1**//

const Bloglist = (props) => {

    const blogs = props.blogs;
    const title = props.title;
    
    return ( 
        <div className="blog-list">
            <div className="">
                <h2>{title}</h2>
                {blogs.map((blog)=>(
                <div className="blog-preview" key={blog.id}>
                    <h2>{blog.title}</h2>
                    <p>Written by{blog.author}</p>
                    <button>Delete Blog</button>
                </div>
            ))}
          </div>
        </div> 
    );
}
 
export default Bloglist;

//**USE EFFECT**//

  useEffect(()=>{
      console.log("running")
    },[handleDelete])

//**Delete Event**//

?Home?
import { useState , useEffect} from "react";
import Bloglist from "./bloglist";

const Home = () => {
    const [blogs,setBlogs] = useState(null)

    const handleDelete = (id)=>{
      const newBlogs = blogs.filter(blog => blog.id !== id)
      setBlogs(newBlogs)
    }

    useEffect(()=>{
      fetch("http://localhost:8000/blogs")
      .then(res=>{
        return res.json()
      })
      .then(data=>{
        setBlogs(data)
      })
    },[])

    return ( 
        <div className="home">
          {blogs && <Bloglist blogs={blogs} title="All Blogs" handleDelete={handleDelete}/>}
        </div>
     );
}
 
export default Home;

//*FETCHING DATA USING JSON SERVER*//

 fetch("http://localhost:8000/blogs")
      .then(res=>{
        return res.json()
      })
      .then(data=>{
        setBlogs(data)
        setIsPending(false)
      })

?bloglist?

const Bloglist = ({blogs,title,handleDelete}) => {
    return ( 
        <div className="blog-list">
            <div className="">
                <h2>{title}</h2>
                {blogs.map((blog)=>(
                <div className="blog-preview" key={blog.id}>
                    <h2>{blog.title}</h2>
                    <p>Written by{blog.author}</p>
                    <button onClick={()=>handleDelete(blog.id)}>Delete Blog</button>
                </div>
            ))}
          </div>
        </div> 
    );
}
 
export default Bloglist;
